{"ast":null,"code":"import React,{useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";// Declare a new state variable, which we'll call \"count\"\nexport default function TextForm(props){const handleUpClick=()=>{//console.log(\"up click\");\nsetText(text.toLocaleUpperCase());props.set_Alert(\"Converted to uppercase successfully!\",\"success\");};const handleOnClick=event=>{//.log(\"on Change\");\nsetText(event.target.value);const punct=\"!,;.-?'\";let count=0;for(let i=0;i<text.length;i++){if(!punct.includes(text[i])){continue;};count++;};setCount(count);let txt=text+\" \";const sentenceCount=txt.split(\". \").length-1;setSentenceCount(sentenceCount);console.log(sentenceCount);};const handleDownClick=()=>{setText(text.toLocaleLowerCase());props.set_Alert(\"Converted to lowercase successfully!\",\"success\");};const handleClearClick=event=>{setText(\" \");setCount(0);setSentenceCount(0);props.set_Alert(\"Cleared the text successfully!\",\"success\");};const handleCopy=()=>{let text=document.getElementById(\"myTextArea\");text.select();navigator.clipboard.writeText(text.value);props.set_Alert(\"Copy the text successfully!\",\"success\");};const handleExtraSpaces=()=>{let newText=text.split(/[ ]+/);setText(newText.join(\" \"));props.set_Alert(\"Removed the extra spaceses successfully!\",\"success\");};const[text,setText]=useState(\" \");const[count,setCount]=useState(0);const[sentenceCount,setSentenceCount]=useState(0);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"table\",{className:\"table table-\".concat(props.mode,\" table-striped\"),children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"Character\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"Words\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"Space\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"Punctuations\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"Sentences\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{scope:\"row\",children:text.length}),/*#__PURE__*/_jsx(\"th\",{children:text.split(' ').length}),/*#__PURE__*/_jsx(\"th\",{children:text.split(' ').length-1}),/*#__PURE__*/_jsx(\"th\",{children:count}),/*#__PURE__*/_jsx(\"th\",{children:sentenceCount})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"container\",style:{color:props.mode==='light'?'white':'#084c98ddd'},children:[/*#__PURE__*/_jsx(\"h1\",{children:props.heading}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3 \",children:[/*#__PURE__*/_jsx(\"textarea\",{className:\"form-control my-4 bg-\".concat(props.mode,\" text-\").concat(props.mode==='light'?'dark':'light'),style:{backgroundColor:props.mode==='light'?'black':'white'},id:\"myTextArea\",value:text,onChange:handleOnClick,rows:\"8\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary mx-1\",onClick:handleUpClick,children:\"Convert to Upercase\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary mx-1\",onClick:handleDownClick,children:\"Convert to Lowerercase\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary mx-1\",onClick:handleClearClick,children:\"Clear\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary mx-1\",onClick:handleCopy,children:\"CopyText\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary mx-1\",onClick:handleExtraSpaces,children:\"Remove ExtraSpace\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"container my-3\",style:{color:props.mode==='light'?'white':'black'},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Your text summary\"}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsxs(\"b\",{children:[text.trim().length>0?text.trim().split(/\\s+/).length:0,\" \"]}),\"words and \",/*#__PURE__*/_jsx(\"b\",{children:text.trim().length}),\" character\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"How long does it take to read \",/*#__PURE__*/_jsx(\"b\",{children:text.split(' ').length}),\" words? \",/*#__PURE__*/_jsx(\"b\",{children:0.008*text.split(' ').length}),\" minutes\"]}),/*#__PURE__*/_jsx(\"h2\",{children:\"Preview\"}),/*#__PURE__*/_jsx(\"p\",{children:text.length>1?text:\"Enter the text to preview overhere\"})]})]});}TextForm.defaultProps={heading:\"set the heading\"};","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","TextForm","props","handleUpClick","setText","text","toLocaleUpperCase","set_Alert","handleOnClick","event","target","value","punct","count","i","length","includes","setCount","txt","sentenceCount","split","setSentenceCount","console","log","handleDownClick","toLocaleLowerCase","handleClearClick","handleCopy","document","getElementById","select","navigator","clipboard","writeText","handleExtraSpaces","newText","join","children","className","concat","mode","scope","style","color","heading","backgroundColor","id","onChange","rows","onClick","trim","defaultProps"],"sources":["/Users/nomansiddiqi/Desktop/code/js-refresher/textutils/src/components/TextForm.js"],"sourcesContent":["import React, {useState} from 'react'\nimport PropTypes from 'prop-types'\n// Declare a new state variable, which we'll call \"count\"\n\nexport default function TextForm(props) {\n    const handleUpClick = ()=> {\n        //console.log(\"up click\");\n        setText(text.toLocaleUpperCase());\n        props.set_Alert(\"Converted to uppercase successfully!\", \"success\");\n    }\n    const handleOnClick = (event)=> {\n        //.log(\"on Change\");\n        setText(event.target.value);\n        const punct = \"!,;.-?'\";\n        let count = 0;\n        for(let i = 0; i < text.length; i++){\n            if(!punct.includes(text[i])){\n            continue;\n            };\n            count++;\n        };\n        setCount(count);\n\n        let txt = text + \" \";\n        const sentenceCount = txt.split(\". \").length - 1;\n        setSentenceCount(sentenceCount);\n        console.log(sentenceCount);\n    }\n    const handleDownClick = ()=> {\n        setText(text.toLocaleLowerCase());\n        props.set_Alert(\"Converted to lowercase successfully!\", \"success\");\n    };\n    const handleClearClick = (event)=> {\n        setText(\" \")\n        setCount(0)\n        setSentenceCount(0);\n        props.set_Alert(\"Cleared the text successfully!\", \"success\");\n    }  \n    const handleCopy = () => {\n        let text = document.getElementById(\"myTextArea\")\n        text.select();\n        navigator.clipboard.writeText(text.value);\n        props.set_Alert(\"Copy the text successfully!\", \"success\");\n    };\n\n    const handleExtraSpaces = () => {\n        let newText = text.split(/[ ]+/);\n        setText(newText.join(\" \"));\n        props.set_Alert(\"Removed the extra spaceses successfully!\", \"success\");\n    };\n    const [text, setText] = useState(\" \");\n    const [count, setCount] = useState(0);\n    const[sentenceCount, setSentenceCount] = useState(0);\n    return (\n        <>\n        <table className={`table table-${props.mode} table-striped`} >\n            <thead>\n                <tr>\n                    <th scope=\"col\">Character</th>\n                    <th scope=\"col\">Words</th>\n                    <th scope=\"col\">Space</th>\n                    <th scope=\"col\">Punctuations</th>\n                    <th scope=\"col\">Sentences</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                <th scope=\"row\">{text.length}</th>\n                <th>{text.split(' ').length }</th>\n                <th>{text.split(' ').length - 1}</th>\n                <th>{count}</th>\n                <th>{sentenceCount}</th>\n                </tr>\n            </tbody>  \n        </table>       \n            <div className='container' style={{color: props.mode === 'light'? 'white': '#084c98ddd'}}>\n                <h1>{props.heading}</h1>\n                <div className=\"mb-3 \">\n                    <textarea className={`form-control my-4 bg-${props.mode} text-${props.mode === 'light'? 'dark': 'light'}`} style={{backgroundColor: props.mode === 'light'? 'black': 'white'}} id=\"myTextArea\" value={text} onChange={handleOnClick} rows=\"8\"></textarea> \n                    <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert to Upercase</button>\n                    <button className=\"btn btn-primary mx-1\" onClick={handleDownClick}>Convert to Lowerercase</button>\n                    <button className=\"btn btn-primary mx-1\" onClick={handleClearClick}>Clear</button>\n                    <button className=\"btn btn-primary mx-1\" onClick={handleCopy}>CopyText</button>\n                    <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>Remove ExtraSpace</button>\n                </div>\n            </div>\n            <div className=\"container my-3\" style={{color: props.mode === 'light'? 'white': 'black'}}>\n                <h2>Your text summary</h2>\n                <p>\n                <b>{text.trim().length > 0 ?text.trim().split(/\\s+/).length: 0} </b>words and <b>{text.trim().length}</b> character\n                </p>\n                <p>\n                    How long does it take to read <b>{text.split(' ').length }</b> words?\t<b>{0.008 * text.split(' ').length }</b> minutes\n                </p>\n                <h2>Preview</h2>\n                <p>{text.length > 1 ? text : \"Enter the text to preview overhere\"}</p>\n            </div>\n        </>\n    )\n}\nTextForm.propTypes = {heading: PropTypes.string.isRequired}\nTextForm.defaultProps = {heading: \"set the heading\"}; "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}